{
  "variables":
    {
      "version"                           : "{{ user `version` }}",
      "iso_checksum"                      : "xxxxxxxxxxxxxxxxxxxxx",
      "aws_access_key"                    : "{{env `PACKER_AWS_ACCESS_KEY`}}",
      "aws_secret_key"                    : "{{env `PACKER_AWS_SECRET_KEY`}}",
      "root_pass"                         : "{{env `PACKER_ROOT_PASSWORD`}}",
      "remote_esxi_username"              : "svc-packer",
      "remote_esxi_password"              : "{{env `PACKER_SVC_PACKER_PASSWORD`}}",
      "remote_esxi_datastore"             : "xxxxxx-xxxxxx-xxxxxx-HOST-CACHE-ONLY",
      "vcenter_username"                  : "{{env `PACKER_VCENTER_USERNAME`}}",
      "vcenter_password"                  : "{{env `PACKER_VCENTER_PASSWORD`}}",
      "kms_key_id_acct1_us-west-1"          : "arn:aws:kms:us-west-1:xxxxxxx:key/xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx",
      "kms_key_id_acct2_us-west-1"          : "arn:aws:kms:us-west-1:xxxxxxx:key/xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx",
      "kms_key_id_acct2_us-east-1"          : "arn:aws:kms:us-east-1:xxxxxxx:key/xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx",
      "kms_key_id_acct2_eu-west-2"          : "arn:aws:kms:eu-west-2:xxxxxxx:key/xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx",
      "kms_key_id_acct2_eu-central-1"       : "arn:aws:kms:eu-central-1:xxxxxxx:key/xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx-2b6f757ef496",
      "kms_key_id_acct3_us-west-2"      : "arn:aws:kms:us-west-2:xxxxxxx:key/xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx",
      "kms_key_id_acct3_us-east-1"      : "arn:aws:kms:us-east-1:xxxxxxx:key/xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx-xxxxxxx" 
    },

  "builders":
  [
    {
      "name"                 	: "aws-acct1",
      "type"                 	: "amazon-ebs",
      "access_key"           	: "{{user `aws_access_key`}}",
      "secret_key"           	: "{{user `aws_secret_key`}}",
      "region"               	: "{{user `aws_region`}}",
      "instance_type"        	: "t2.xlarge",
      "ssh_timeout"           : "10m",
      "ssh_username"          : "ec2-user",
      "subnet_id"            	: "{{user `aws_subnet_id`}}",
      "ami_name"             	: "xxxxxxxxxx-amazon-ecs-v{{user `version`}}",
      "ami_description"      	: "xxxxxx - Amazon ECS-Optmized - Build ({{timestamp}})",
      "force_deregister"     	: false,
      "kms_key_id"            : "{{user `kms_key_id_acct1_us-west-1`}}",
      "region_kms_key_ids"    : {
        "us-west-1": "{{user `kms_key_id_acct1_us-west-1`}}"
      },
      "tags": {
        "OS": "Amazon ECS" 
      },
      "ami_regions"           : [
        "us-west-1"
      ],
      "source_ami_filter": {
        "filters": {
            "virtualization-type": "hvm",
            "name": "amzn-ami-*-amazon-ecs-optimized",
            "root-device-type": "ebs"
          },
          "most_recent": true,
          "owners": ["amazon"]
      },
      "encrypt_boot"          : true
    },
    {
      "name"                 	: "aws-acct2",
      "type"                 	: "amazon-ebs",
      "access_key"           	: "{{user `aws_access_key`}}",
      "secret_key"           	: "{{user `aws_secret_key`}}",
      "region"               	: "{{user `aws_region`}}",
      "instance_type"        	: "t2.large",
      "ssh_timeout"           : "10m",
      "ssh_username"          : "ec2-user",
      "subnet_id"            	: "{{user `aws_subnet_id`}}",
      "ami_name"             	: "xxxxxxxxxx-amazon-ecs-v{{user `version`}}",
      "ami_description"      	: "xxxxxx - Amazon ECS-Optmized - Build ({{timestamp}})",
      "force_deregister"     	: false,
      "kms_key_id"            : "{{user `kms_key_id_acct2_us-west-1`}}",
      "region_kms_key_ids"    : {
        "us-west-1":        "{{user `kms_key_id_acct2_us-west-1`}}",
        "us-east-1":        "{{user `kms_key_id_acct2_us-east-1`}}",
        "eu-west-2":        "{{user `kms_key_id_acct2_eu-west-2`}}",
        "eu-central-1":     "{{user `kms_key_id_acct2_eu-central-1`}}"
      },
      "tags": {
        "OS": "Amazon ECS" 
      },
      "ami_regions"           : [
        "eu-central-1",
        "eu-west-2",
        "us-east-1",
        "us-west-1"
      ],
      "source_ami_filter": {
        "filters": {
            "virtualization-type": "hvm",
            "name": "amzn-ami-*-amazon-ecs-optimized",
            "root-device-type": "ebs"
          },
          "most_recent": true,
          "owners": ["amazon"]
      },
      "encrypt_boot"          : true
    },
    {
      "name"                 	: "aws-acct2-il2",
      "type"                 	: "amazon-ebs",
      "access_key"           	: "{{user `aws_access_key`}}",
      "secret_key"           	: "{{user `aws_secret_key`}}",
      "region"               	: "{{user `aws_region`}}",
      "instance_type"        	: "t2.large",
      "ssh_timeout"           : "10m",
      "ssh_username"          : "ec2-user",
      "subnet_id"            	: "{{user `aws_subnet_id`}}",
      "ami_name"             	: "xxxxxxxxxx-amazon-ecs-v{{user `version`}}  ",
      "ami_description"      	: "xxxxxx - Amazon ECS-Optmized - Build ({{timestamp}})",
      "force_deregister"     	: false,
      "skip_region_validation": true,
      "kms_key_id"            : "{{user `kms_key_id_acct3_us-west-2`}}",
      "associate_public_ip_address" : false,
      "region_kms_key_ids"    : {
        "us-west-2": "{{user `kms_key_id_acct3_us-west-2`}}",
        "us-east-1": "{{user `kms_key_id_acct3_us-east-1`}}"
      },
      "tags": {
        "OS": "Amazon ECS" 
      },
      "ami_regions"           : [
        "us-west-2",
        "us-east-1"
      ],
      "source_ami_filter": {
        "filters": {
            "virtualization-type": "hvm",
            "name": "amzn-ami-*-amazon-ecs-optimized",
            "root-device-type": "ebs"
          },
          "most_recent": true,
          "owners": ["amazon"]
      },
      "encrypt_boot"          : true
    }
  ],

  "provisioners": [
    {
      "type": "shell",
      "execute_command": "sudo {{ .Path }}",
      "script": "./scripts/install_ansible.sh"
    },
    {
      "type": "ansible-local",
      "playbook_dir": "./scripts/",
      "playbook_file": "./scripts/centos7.yaml"
    },
    {
      "type": "ansible-local",
      "only": ["aws-acct1", "aws-acct2","aws-acct2-il2"],
      "playbook_dir": "./scripts/",
      "playbook_file": "./scripts/aws.yaml" 
    },
    {
      
      "type":  "shell",
      "execute_command": "sudo {{ .Path }}",
      "script": "./scripts/cleanup.sh"
    }
  ],

  "post-processors":   [
    {
      "type": "manifest",
      "output": "manifest.json",
      "strip_path": true
    }
   ]
}
